# Motivation

We've gone through a lot of setup, and now we're going to start building an R package. Soon. But we need to have some motivation, first. It involves a bit of a story, and a bit of imagination.

## Overview

* **Teaching** 30 minutes
* **Exercises** 10 minutes

## Questions

* 

## Objectives

* Start to wrangle with a script to turn it into functions

## How this works

One of my big goals with teaching functions, and with teaching R packages, is that I want the examples to be somewhat rooted in the familiar and the real. There are really useful toy examples of writing packages that deliver praise (e.g., ones I've used to teach R packages in the past: https://github.com/njtierney/praiseme), or do simple conversions between units (celcius to farenheit being a very common example).

These examples are useful because they teach you the tools, and the process. However in this course, I want to focus on a bit more than this and incorporate the process of turning code into functions. I think this is important, because it more closely represents other examples we come across in using R, and presents a bit of a richer learning journey, because in addition to learning about the tools and the process of R package building, you will also learn:

- How to think about converting scripts to functions
- How to write better functions

I have written up some example code, which starts as a quarto document. We are going to take this document, and then eventually turn it into an R package. 

The structure of this exercise has taken inspiration from ["The package within" chapter from R Packages](https://r-pkgs.org/package-within.html).

## The example: "learned"

We are going to be looking at a role-play situation where we imagine we are at some fictional workplace, where part of our job is to look at education data that we have acquired from some source. The overall goal of our job here is to produce some **key outputs** from some data.

You can see this example at: https://github.com/njtierney/learned

To download it, run the following code

```{r}
#| eval: false
library(usethis)
use_course("njtierney/learned")
```

:::{.callout-note title="Your turn"}

1. Download the repository using the code above
2. Render the document
3. Read over the document, thinking about what we discussed in [Why functions](why-functions).
4. Identify some potential problems with the code
5. Think about what might happen if we want to read in data from 2015 (or later years), how would you like to do this?

:::

## Discussion of potential problems

After you've taken from time to think about some of the potential problems, open the box below

:::{.callout-caution title="Some of the potential problems" collapse="true"}

- Copying and pasting a document could lead to errors
- What if the data changes? 
- What if other people collaborate on this project? How do they have the source of truth?
- Is there a way to formalise this all?

:::

## Identifying the report outputs

To get us started with some key things, let's think about what the key outputs of this report are.

:::{.callout-note title="Your turn"}

1. Identify the **key outputs** of the report
2. Pick one of those key outputs and start to write out a function for it

:::

:::{.callout-caution title="Key outputs" collapse="true"}

They key outputs are related to the "Produce a ..." steps of the document:

1. Produce a plot of the **proportion of people educated** in each age group in each state
2. Produce a box plot of **proportion of people educated** for each state.
3. Produce a table of The 5 number summary (min, 1st quantile, median, 3rd quantile, max)  of **proportion of people educated** for each state.

:::

So now we know where we are headed - we want to write some functions that produce these plots and tables.

However, the main problem that we encountered was that there was actually a bit of data cleaning that needed to happen before we did this. Let's focus on cleaning up and rearranging the quarto document first to identify the data cleaning steps required.

:::{.callout-note title="Your turn"}

1. Open, "alpha-analysis2014.qmd"
2. Move all the "data quality" checks into a new section called "data quality"
3. Move all of the data cleaning code up to the top, so we just work with one data set, named `tidy_age_state_education_2014`
4. Create two functions to clean the data: 
  1. tidy the age groups
  2. remove the missing values
5. Put these two functions into another function that does the data cleaning

:::


## Plot of **proportion of people educated** in each age group in each state

The key code here is this:

```{r}
#| eval: false
ggplot(
  fixed_age_group_education_2014,
  aes(
    x = prop_studying,
    y = age_group
  )
) +
  geom_col() +
  facet_wrap(~state_territory, ncol = 2)
```

However, in order to write this, we need to identify the steps that happened earlier to the `fixed_age_group_education_2014` data. 

:::{.callout-note title="Your turn"}

What were the fixes that were required for this data?

:::

## box plot of **proportion of people educated** for each state.

## Table of The 5 number summary of **proportion of people educated** for each state.
